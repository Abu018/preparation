/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void inorder(TreeNode* root,vector<int>&ans){
        if(root==NULL)return;
        ans.push_back(root->val);
        inorder(root->left,ans);
        inorder(root->right,ans);
    }
public:
    bool findTarget(TreeNode* root, int k) {
    vector<int>ans;
    inorder(root,ans);
    sort(ans.begin(),ans.end());
    int i,j;
    for(i=0,j=ans.size()-1;i<j;){
        int sum=ans[i]+ans[j];
         if(sum==k){
            return true;
        }
        if(sum>k){
            j--;
        }
        if(sum<k){
            i++;
        }

    }
    
    return false;
    }
};
